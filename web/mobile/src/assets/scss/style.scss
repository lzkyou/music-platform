@import "./vars";

.box {
  box-sizing: border-box;
}

body {
  max-width: 100vw;
  background-color: #f9f9f9;
  font-family: "微软雅黑" !important;
}

a {
  display: block;
}

.bd-none{
  border: none;
}

.shadow {
  box-shadow: 1px 1px 5px #c5c5c5;
}

// width,height
.w-100 {
  width: 100%;
}

.vw-100 {
  width: 100vw;
}

.h-100 {
  height: 100%;
}

.vh-100 {
  height: 100vh;
}

// text-overflow
.text-ellipsis {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

//flex
.flex {
  display: flex;
}

.flex-column {
  flex-direction: column;
}

.flex-w {
  flex-wrap: wrap;
}

.flex-nw{
  flex-wrap: nowrap;
}

.flex-1 {
  flex: 1;
}

//else
.lg-newsong{
  background-image: linear-gradient(to right, #ed4264 , #ffedbc );
}

.f-normal{
  font-weight: normal;
}

@each $colorKey, $color in $colors {
  .#{$colorKey}{
    color: $color;
  }
  .text-#{$colorKey} {
    color: $color;
  }

  .bg-#{$colorKey} {
    background-color: $color;
  }

  .bd-#{$colorKey} {
    border: 1px solid $color;
  }
}

@each $var in (left, center, right) {
  .text-#{$var} {
    text-align: $var !important;
  }
}

@each $sizeKey, $size in $font-sizes {
  .fs-#{$sizeKey} {
    font-size: $size * $base-font-size !important;
  }
}

@each $flexKey, $flexVal in $flex-jc {
  .jc-#{$flexKey} {
    justify-content: $flexVal;
  }
}

@each $flexKey, $flexVal in $flex-ai {
  .ai-#{$flexKey} {
    align-items: $flexVal;
  }
}

@each $typeKey, $type in $spacing-types {
  // m/p - 1/2/3/4/5
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}-#{$sizeKey} {
      #{$type}: $size * $spacing-base-size;
    }
  }

  // m/px - 1/2/3/4/5
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}x-#{$sizeKey} {
      #{$type}-left: $size * $spacing-base-size;
      #{$type}-right: $size * $spacing-base-size;
    }
  }

  // m/py - 1/2/3/4/5
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}y-#{$sizeKey} {
      #{$type}-top: $size * $spacing-base-size;
      #{$type}-bottom: $size * $spacing-base-size;
    }
  }

  // m/p t/r/b/l - 1/2/3/4/5
  @each $directionKey, $direction in $spacing-directions {
    @each $sizeKey, $size in $spacing-sizes {
      .#{$typeKey}#{$directionKey}-#{$sizeKey} {
        #{$type}-#{$direction}: $size * $spacing-base-size;
      }
    }
  }
}

@each $sizeKey, $size in $spacing-sizes {
  .lh-#{$sizeKey} {
    line-height: $size * $spacing-base-size;
  }
}

@each $dir in (top,right,bottom,left) {
  .bd-#{$dir}{
    border-#{$dir}: 1px solid $border-color;
  }
}